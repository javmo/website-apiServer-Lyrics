{"version":3,"sources":["webpack://website-apiServer-Lyrics/./frontend/services/SongService.js","webpack://website-apiServer-Lyrics/./frontend/UISongBook.js","webpack://website-apiServer-Lyrics/./frontend/services/LyricService.js","webpack://website-apiServer-Lyrics/./frontend/services/CategoryService.js","webpack://website-apiServer-Lyrics/./frontend/services/LyricPublishService.js","webpack://website-apiServer-Lyrics/./frontend/songbook.js"],"names":["lyricService","this","URI","response","fetch","json","lyricId","lyric","console","log","reponse","headers","method","body","songService","songId","song","data","songTitle","categoryService","categoryId","category","cateogry","_id","JSON","stringify","lyricPubService","lyricPub","lyricPubId","document","addEventListener","uiSongBook","categories","getCategories","songsBookContainer","getElementById","innerHTML","forEach","div","createElement","className","id","appendChild","categoryType","order","div2","getLyricsPublish","async","categoryContainer","getSong","textHtml","getLyric","text","title","renderCategory","renderCategory2","setTimeout","renderSongBook","querySelector","style","display","e","target","classList","contains","window","location","reload","preventDefault"],"mappings":"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","file":"js/songbook.bundle.js","sourcesContent":["class SongService {\r\n    constructor() {\r\n     //   this.URI =  'http://localhost:3000/api/songs';\r\n        this.URI =  '/api/songs';\r\n    }\r\n\r\n    async getSongs() {\r\n        // fetch por defecto hace GET\r\n        const response = await fetch(this.URI);\r\n        const songs = await response.json()\r\n        return songs;\r\n    }\r\n\r\n    async getSong(songId) {\r\n        const response = await fetch(`${this.URI}/${songId}`, {\r\n\r\n        });\r\n        const song = await response.json();\r\n        return song;\r\n    }\r\n\r\n    async postSong(song) {\r\n        const reponse = await fetch(this.URI, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: song\r\n        });\r\n        return await reponse.json();\r\n    }\r\n\r\n    async deleteSong(songId) {\r\n        const response = await fetch(`${this.URI}/${songId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE'\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n    }\r\n\r\n    async searchSongLike(songTitle) {\r\n        console.log(songTitle);\r\n        const response = await fetch(`${this.URI}/search/search?q=${songTitle}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'GET'\r\n        });\r\n        return await response.json();\r\n    }\r\n\r\n}\r\nexport default SongService;","import SongService from \"./services/SongService\";\r\nimport CategoryService from \"./services/CategoryService\";\r\nimport LyricPublishService from \"./services/LyricPublishService\";\r\nconst lyricService = new LyricService();\r\nimport LyricService from \"./services/LyricService\";\r\n\r\nconst songService = new SongService();\r\nconst categoryService = new CategoryService();\r\nconst lyricPubService = new LyricPublishService()\r\n\r\nclass UISongBook {\r\n\r\n    async renderCategory() {\r\n        const categories = await categoryService.getCategories();\r\n        const songsBookContainer = document.getElementById('songsBook-card');\r\n\r\n        songsBookContainer.innerHTML = '';\r\n        categories.forEach(category => {\r\n            const div = document.createElement('div');\r\n            div.className = 'card text-white bg-secondary mb-3';\r\n            div.id = 'card-category-'+ category._id;\r\n\r\n            songsBookContainer.appendChild(div);\r\n        })\r\n    }\r\n\r\n    async renderCategory2() {\r\n        const categories = await categoryService.getCategories();\r\n\r\n        categories.forEach(category => {\r\n            const songsBookContainer = document.getElementById('card-category-' + category._id);\r\n            songsBookContainer.innerHTML = '';\r\n            const div = document.createElement('div');\r\n            div.className = 'card-header';\r\n            div.id = 'header-category-'+ category._id;\r\n            div.innerHTML = `\r\n            ${ category.categoryType } <h2>(ORDEN: ${ category.order })</h2>\r\n            `\r\n            songsBookContainer.appendChild(div);\r\n\r\n            const div2 = document.createElement('div');\r\n            div2.className = 'card-body';\r\n            div2.id = 'body-category-'+ category._id;\r\n            songsBookContainer.appendChild(div2);\r\n\r\n        })\r\n    }\r\n\r\n    async renderSongBook() {\r\n        const lyricsPub = await lyricPubService.getLyricsPublish();\r\n\r\n        lyricsPub.forEach( async (lyricPub) => {\r\n            const categoryContainer = document.getElementById('body-category-' + lyricPub.category);\r\n            if(categoryContainer != null) {\r\n                categoryContainer.innerHTML = '';\r\n\r\n                const song = await songService.getSong(lyricPub.song);\r\n                const lyric = await lyricService.getLyric(song.lyric);\r\n\r\n\r\n                const textHtml = ``+ lyric.text ;\r\n\r\n                const div = document.createElement('div');\r\n                div.className = '';\r\n                div.id = 'card-category-'+ lyricPub._id;\r\n                div.innerHTML = `\r\n                <h4 class=\"card-title\" id=\"song-title-${lyricPub._id}\">${song.title}</h4>\r\n                `\r\n                + textHtml\r\n                ;\r\n                categoryContainer.appendChild(div);\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n    async renderCategory3() {\r\n        const categories = await categoryService.getCategories();\r\n\r\n        categories.forEach(category => {\r\n            const songsBookContainer = document.getElementById('card-category-' + category._id);\r\n            songsBookContainer.innerHTML = '';\r\n            const div = document.createElement('div');\r\n            div.className = 'card-header';\r\n            div.id = 'header-category-'+ category._id;\r\n            div.innerHTML = `\r\n            ${ category.categoryType }\r\n            `\r\n            songsBookContainer.appendChild(div);\r\n\r\n            const div2 = document.createElement('div');\r\n            div2.className = 'card-body';\r\n            div2.id = 'body-category-'+ category._id;\r\n            songsBookContainer.appendChild(div2);\r\n\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default UISongBook;","class LyricService {\r\n    constructor() {\r\n      //  this.URI =  'http://localhost:3000/api/lyrics';\r\n        this.URI =  '/api/lyrics';\r\n    }\r\n\r\n    async getLyrics() {\r\n        // fetch por defecto hace GET\r\n        const response = await fetch(this.URI);\r\n        const lyric = await response.json()\r\n        return lyric;\r\n    }\r\n\r\n    async getLyric(lyricId) {\r\n        const response = await fetch(`${this.URI}/${lyricId}`, {\r\n\r\n        });\r\n        const lyric = await response.json();\r\n        return lyric;\r\n    }\r\n\r\n    async postLyric(lyric) {\r\n        console.log(lyric, 'ANTES LOG');\r\n        const reponse = await fetch(this.URI, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: lyric\r\n        });\r\n        const data = await reponse.json();\r\n    }\r\n\r\n    async deleteLyric(lyricId) {\r\n        const response = await fetch(`${this.URI}/${lyricId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE'\r\n        });\r\n        const data = await response.json();\r\n    }\r\n\r\n}\r\nexport default LyricService;","class CategoryService {\r\n    constructor() {\r\n     //   this.URI = 'http://localhost:3000/api/category';\r\n        this.URI = '/api/category';\r\n    }\r\n\r\n    async getCategories() {\r\n        // fetch por defecto hace GET\r\n        const response = await fetch(this.URI);\r\n        const categories = await response.json()\r\n        return categories;\r\n    }\r\n\r\n    async getCategory(categoryId) {\r\n        const response = await fetch(`${this.URI}/${categoryId}`, {\r\n\r\n        });\r\n        const category = await response.json();\r\n        return category;\r\n    }\r\n\r\n    async postCategory(category) {\r\n        const reponse = await fetch(this.URI, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: category\r\n        });\r\n        return await reponse.json();\r\n    }\r\n\r\n    async deleteCategory(categoryId) {\r\n        const response = await fetch(`${this.URI}/${categoryId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE'\r\n        });\r\n        const data = await response.json();\r\n    }\r\n\r\n    async updateCategory(cateogry) {\r\n        const response = await fetch(`${this.URI}/${cateogry._id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            body: JSON.stringify(cateogry)\r\n        });\r\n        return await response.json();\r\n    }\r\n\r\n/*    async postLyricPublish(lyricPub) {\r\n        console.log(song, 'ANTES LOG');\r\n        const reponse = await fetch(this.URI, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: lyricPub\r\n        });\r\n        return await reponse.json();\r\n        console.log(data, 'DESPUES LOG');\r\n    }\r\n\r\n    async deleteLyricPublish(lyricPubId) {\r\n        const response = await fetch(`${this.URI}/${lyricPubId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE'\r\n        });\r\n        const data = await response.json();\r\n        console.log(data);\r\n    }*/\r\n\r\n}\r\nexport default CategoryService;","class LyricPublishService {\r\n    constructor() {\r\n      //  this.URI = 'http://localhost:3000/api/lyricsPublish';\r\n        this.URI = '/api/lyricsPublish';\r\n    }\r\n\r\n    async getLyricsPublish() {\r\n        // fetch por defecto hace GET\r\n        const response = await fetch(this.URI);\r\n        const lyricsPub = await response.json()\r\n        return lyricsPub;\r\n    }\r\n\r\n    async postLyricPublish(lyricPub) {\r\n        const reponse = await fetch(this.URI, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: lyricPub\r\n        });\r\n        return await reponse.json();\r\n    }\r\n\r\n    async deleteLyricPublish(lyricPubId) {\r\n        const response = await fetch(`${this.URI}/${lyricPubId}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'DELETE'\r\n        });\r\n        const data = await response.json();\r\n    }\r\n\r\n    async getLyricPublish(lyricPubId) {\r\n        const response = await fetch(`${this.URI}/${lyricPubId}`, {\r\n\r\n        });\r\n        const lyricPub = await response.json();\r\n        return lyricPub;\r\n    }\r\n\r\n    async updateLyricPub(lyricPub) {\r\n        const response = await fetch(`${this.URI}/${lyricPub._id}`, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'PUT',\r\n            body: JSON.stringify(lyricPub)\r\n        });\r\n        return await response.json();\r\n    }\r\n\r\n}\r\nexport default LyricPublishService;","import './styles/style.css';\r\nimport UISongBook from \"./UISongBook\";\r\n\r\n\r\n\r\n\r\n//evento que carga antes datos\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const uiSongBook = new UISongBook();\r\n\r\n    uiSongBook.renderCategory();\r\n    uiSongBook.renderCategory2();\r\n    // se setea 1 seg de delay para darle tiempo a la carga\r\n    setTimeout(function (){ uiSongBook.renderSongBook()},1000);\r\n    setTimeout(function (){ document.querySelector(\".preloader\").style.display = \"none\" },1000);\r\n\r\n});\r\n\r\ndocument.getElementById('btn-update')\r\n    .addEventListener('click', e => {\r\n        if (e.target.classList.contains('update'))\r\n            javascript:window.location.reload();\r\n\r\n        e.preventDefault();\r\n    });"],"sourceRoot":""}