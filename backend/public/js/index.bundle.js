(()=>{"use strict";const e=new class{constructor(){this.URI="/api/songs"}async getSongs(){const e=await fetch(this.URI);return await e.json()}async getSong(e){const t=await fetch(`${this.URI}/${e}`,{});return await t.json()}async postSong(e){const t=await fetch(this.URI,{headers:{"Content-Type":"application/json"},method:"POST",body:e});return await t.json()}async deleteSong(e){const t=await fetch(`${this.URI}/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"}),n=await t.json();console.log(n)}async searchSongLike(e){console.log(e);const t=await fetch(`${this.URI}/search/search?q=${e}`,{headers:{"Content-Type":"application/json"},method:"GET"});return await t.json()}},t=(new class{constructor(){this.URI="/api/lyrics"}async getLyrics(){const e=await fetch(this.URI);return await e.json()}async getLyric(e){const t=await fetch(`${this.URI}/${e}`,{});return await t.json()}async postLyric(e){console.log(e,"ANTES LOG");const t=await fetch(this.URI,{headers:{"Content-Type":"application/json"},method:"POST",body:e});await t.json()}async deleteLyric(e){const t=await fetch(`${this.URI}/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"});await t.json()}},new class{constructor(){this.URI="/api/genres"}async getGenres(){const e=await fetch(this.URI);return await e.json()}async getGenre(e){const t=await fetch(`${this.URI}/${e}`,{headers:{"Content-Type":"application/json"},method:"GET"});return await t.json()}async postSong(e){console.log(e,"ANTES LOG");const t=await fetch(this.URI,{headers:{"Content-Type":"application/json"},method:"POST",body:e});return await t.json()}async deleteSong(e){const t=await fetch(`${this.URI}/${e}`,{headers:{"Content-Type":"application/json"},method:"DELETE"});await t.json()}}),n=class{async renderSongs(){const t=await e.getSongs(),n=document.getElementById("songs-cards");n.innerHTML="",t.forEach((e=>{const t=document.createElement("div");t.className="",t.innerHTML=`\n            <div class="card m-2">\n            <div class="row">\n            <div class="col-md-8">\n            <div class="card-block px-2">\n            <h4 class="card-title"> ${e.title} </h4>\n            <p class="card-text" id="song-id-${e._id}"> \n            </p>\n            <a href="#" class="btn btn-danger delete" _id="${e._id}">X</a>\n            </div>\n            </div>\n            </div>\n            </div>\n            `,n.appendChild(t)}))}async renderGenre(){(await e.getSongs()).forEach((async e=>{const n=document.getElementById("song-id-"+e._id);n.innerHTML="",e.genre.forEach((async e=>{const s=await t.getGenre(e),a=document.createElement("div");a.innerHTML="",a.innerHTML=`\n            <span class="badge badge-pill badge-success"> ${s.name} </span>\n            `,n.appendChild(a)}))}))}async addANewSong(t,n){await e.postSong(t),this.clearSongFrom(),this.renderSongs()}clearSongFrom(){document.getElementById("song-form").reset()}renderMessage(e,t,n){const s=document.createElement("div");s.className=`alert alert-${t}`,s.appendChild(document.createTextNode(e));const a=document.querySelector(".col-md-4"),o=document.querySelector("#song-form");a.insertBefore(s,o),setTimeout((()=>{document.querySelector(".alert").remove()}),n)}async deleteSong(t){await e.deleteSong(t),this.renderSongs()}};document.addEventListener("DOMContentLoaded",(()=>{const e=new n;e.renderSongs(),e.renderGenre()})),document.getElementById("song-form").addEventListener("submit",(e=>{const t=document.getElementById("title").value,s=document.getElementById("text").value,a=new FormData;a.append("title",t),a.append("genres","{}"),a.append("text",s);const o=new n,c=new class{constructor(e,[t],n){this.title=e,this.genres=t,this.lyric=n}toJson(){return JSON.stringify({title:this.title,genres:this.genres,lyric:this.lyric})}}(t,[],new class{constructor(e){this.text=e}toJson(){return JSON.stringify({text:this.text})}}(s));o.addANewSong(c.toJson()),o.renderMessage("New Song Added","success",3e3),e.preventDefault()})),document.getElementById("songs-cards").addEventListener("click",(e=>{if(e.target.classList.contains("delete")){const t=new n;t.deleteSong(e.target.getAttribute("_id")),t.renderMessage("Song Remove","danger",2e3)}e.preventDefault()}))})();
//# sourceMappingURL=index.bundle.js.map